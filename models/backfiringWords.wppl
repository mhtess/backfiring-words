// webppl backfiringWords.wppl

///fold:
var marginalizeERP = function(myERP, label){
	Enumerate(function(){
		var x = sample(myERP)
		return x[label]
	})
}

var discretizeBeta = function(gamma, delta){
	var shape_alpha =  gamma * delta
	var shape_beta = (1-gamma) * delta
	var betaPDF = function(x){
	  return Math.pow(x,shape_alpha-1)*Math.pow((1-x),shape_beta-1)
	}
	return map(betaPDF, [0.1,0.3,0.5,0.7,0.9])
}

var fillArray = function(n, val){
	return repeat(n, function(x){return val})
}
///


var statePrior = function(){
	return uniformDraw(worlds)
}

var isThrillSeeker = function(){
	return flip(0.5)
}

var needsMoney = function(){
	return flip(0.5)
}

var otherCause = function(){
	return flip(0.01)
}

var isThief = function(person){
	return (person.needsMoney && person.isThrillSeeker) ? flip(0.9) :
			person.needsMoney ? flip(0.5) :
			person.isThrillSeeker ? flip(0.3) :
			person.other ? flip(0.1) :
			false
}


var meaning = function(utt, person){
		return utt=="is a thief" ? isThief(person) :
				utt=="is not a thief" ? !(isThief(person)):
				true
}

var listener0 = cache(function(utterance) {
  Enumerate(function(){
	var person = {
		needsMoney : needsMoney(),
		isThrillSeeker : isThrillSeeker(),
		other: otherCause()
	}

    var m = meaning(utterance, person)
    
    condition(m) 
    return person
  })
})

// var results = listener0("is not a thief")
// console.log(expectation(marginalizeERP(results, "needsMoney")))
// console.log(expectation(marginalizeERP(results, "isThrillSeeker")))
// console.log(expectation(marginalizeERP(results, "other")))

var speaker1 = cache(function(person) {
  Enumerate(function(){
    var utterance = uniformDraw(["is a thief", "is not a thief"])
    var L0 = listener0(utterance)
    factor(L0.score([],person))
    return utterance
  })
})

// speaker1({needsMoney: true, isThrillSeeker: false, other:false})

var listener1 = function(utterance) {
  Enumerate(function(){
	var person = {
		needsMoney : needsMoney(),
		isThrillSeeker : isThrillSeeker(),
		other: otherCause()
	}
    var S1 = speaker1(person)
    factor(S1.score([],utterance))
    return person
  })
}

var results = listener0("is a thief")
console.log(expectation(marginalizeERP(results, "needsMoney")))
console.log(expectation(marginalizeERP(results, "isThrillSeeker")))
console.log(expectation(marginalizeERP(results, "other")))
