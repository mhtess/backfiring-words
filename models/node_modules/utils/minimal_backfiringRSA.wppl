var meaning = function(utt, effect){
		return utt=="It happened." ? effect :
				utt=="It did not happen." ? !effect:
				true
}


var backfireHypothesis = function(alpha, priorParameters){

	var prior_probability_of_habit = priorParameters.prior_probability_of_habit
	var habit_strength = priorParameters.habit_strength
	var alternative_strength = priorParameters.alternative_strength

	var listener0 = cache(function(utterance, habit) {
	  Enumerate(function(){
	    var behavior = habit ? flip(habit_strength) : flip(alternative_strength)
	    var m = meaning(utterance, behavior)
	    condition(m)
	    return behavior
	  })
	})

	var speaker1 = cache(function(behavior, habit) {
	  Enumerate(function(){
	    var utterance = ["It happened.", 
	                      "It did not happen.", 
	                      "say nothing"][discrete([1,1,1])]
	    var L0 = listener0(utterance, habit)
	    factor(L0.score([],behavior))
	    return utterance
	  })
	})

	var listener1 = function(utterance) {
	  Enumerate(function(){

	    var habit = flip(prior_probability_of_habit)
	    var behavior = habit ? flip(habit_strength) : flip(alternative_strength)

	    var S1 = speaker1(behavior, habit)
	    factor(alpha*S1.score([],utterance))
	    return habit
	  })
	}

	return listener1("It happened.")
}



var nullHypothesis = function(alpha, priorParameters){

	var prior_probability_of_habit = priorParameters.prior_probability_of_habit
	var habit_strength = priorParameters.habit_strength
	var alternative_strength = priorParameters.alternative_strength

	var listener0 = cache(function(utterance) {
	  Enumerate(function(){
	    var habit = flip(prior_probability_of_habit)
	    var behavior = habit ? flip(habit_strength) : flip(alternative_strength)
	    var m = meaning(utterance, behavior)
	    condition(m)
	    return behavior
	  })
	})

	var speaker1 = cache(function(behavior, habit) {
	  Enumerate(function(){
	    var utterance = ["It happened.", 
	                      "It did not happen.", 
	                      "say nothing"][discrete([1,1,1])]
	    var L0 = listener0(utterance)
	    factor(L0.score([],behavior))
	    return utterance
	  })
	})

	var listener1 = function(utterance) {
	  Enumerate(function(){
	    var habit = flip(prior_probability_of_habit)
	    var behavior = habit ? flip(habit_strength) : flip(alternative_strength)
	    var S1 = speaker1(behavior, habit)
	    factor(alpha*S1.score([],utterance))
	    return habit
	  })
	}

	return listener1("It happened.")

}



var observationHypothesis = function(alpha, priorParameters){

	var prior_probability_of_habit = priorParameters.prior_probability_of_habit
	var habit_strength = priorParameters.habit_strength
	var alternative_strength = priorParameters.alternative_strength

	var listener0 = cache(function(utterance) {
	  Enumerate(function(){
	    var habit = flip(prior_probability_of_habit)
	    var behavior = habit ? flip(habit_strength) : flip(alternative_strength)
	    var m = meaning(utterance, behavior)
	    condition(m)
	    return behavior
	  })
	})

	return listener0("It happened.")

}



